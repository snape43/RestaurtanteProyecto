@model Infraestructure.Models.Pedido

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Save", "Pedido", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <div class="row">
        <div class="col-6">
            <div class="form-group">
                @Html.LabelFor(model => model.FechaPedido, htmlAttributes: new { @class = "col-form-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.FechaPedido, htmlAttributes: new { @class = "form-control", @Value = DateTime.Now.ToString("yyyy-MM-dd"), @readonly = "readonly" })

                </div>
            </div>

        </div>
        <div class="col-md-6">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.IdMesa, htmlAttributes: new { @class = "col-form-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.IdMesa, htmlAttributes: new { @class = "form-control" })

                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row mt-4">
   
        <div class="col-md-8">
            <div class="col-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "col-form-label " })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Observaciones, htmlAttributes: new { @class = "form-control" })

                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
  
    <hr /><span class="glyphicons glyphicons-hand-left"></span>
    <div id="resultadoDetalle">
        @if (Web.ViewModel.Carrito.Instancia.Items.Count() > 0)
        {
            @Html.Partial("~/Views/Pedido/_DetallePedido.cshtml",
             (List<Web.ViewModel.ViewModelDetallePedido>)ViewBag.PedidoDetalle
            )
        }
        else
        {
            <div class="alert alert-warning d-flex align-items-center" role="alert">
                La orden no tiene productos

            </div>
        }
    </div>
    <hr />
    <!-- Submit -->
    <button type="submit" class="btn btn-success float-right" id="">
        <span class="glyphicon  glyphicon-floppy-save"></span>
        Guardar
    </button>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryajax")

    <script type="text/javascript">

        //Actualizar cantidad de libros en el carrito
        //Cambio de cantidad en caja de texto
        function updateCantidad(ctr) {
            var txtCantidad = $(ctr);
            var cantidad = txtCantidad.val();
            var id = txtCantidad.data("productoid");
            $.ajax({
                type: "GET",
                dataType: 'text',
                url: "/Pedido/actualizarCantidad",
                data: { "idProducto": id, "cantidad": cantidad },
                success: function (data) {
                    $("#resultadoDetalle").html('');
                    $("#resultadoDetalle").html(data);
                    updateCantProductos();
                }, error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                },
            });
        }
        //Actualizar cantidad de libros en el menú
        function updateCantProductos() {
            $.ajax({
                type: "GET",
                dataType: 'text',
                url: "/Pedido/actualizarPedidoCantidad",
                success: function (data) {
                    $("#cantidadProductos").html('');
                    $("#cantidadProductos").html(data);
                }, error: function (xhr, status, error) {
                    console.log("Error: " + error + ", No Error: " + xhr.status);
                },
            });
        }


    </script>

}
